<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/FibonacciRechner.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/FibonacciRechner.java" />
              <option name="originalContent" value="public class FibonacciRechner {&#10;    // Rekursive Berechnung der Fibonacci-Zahl&#10;    public static int fibonacci(int n) {&#10;        if (n &lt;= 1) {&#10;            return n;&#10;        }&#10;        return fibonacci(n - 1) + fibonacci(n - 2);&#10;    }&#10;&#10;    public static void main(String[] args) {&#10;        for (int i = 0; i &lt;= 40; i++) {&#10;            System.out.println(&quot;Fibonacci(&quot; + i + &quot;) = &quot; + fibonacci(i));&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="public class FibonacciRechner {&#10;    // Rekursive Berechnung der Fibonacci-Zahl&#10;    public static int fibonacci(int n) {&#10;        if (n &lt;= 1) {&#10;            return n;&#10;        }&#10;        return fibonacci(n - 1) + fibonacci(n - 2);&#10;    }&#10;&#10;    public static void main(String[] args) {&#10;        for (int i = 0; i &lt;= 40; i++) {&#10;            System.out.println(&quot;Fibonacci(&quot; + i + &quot;) = &quot; + fibonacci(i));&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$USER_HOME$/OneDrive/Desktop/Uni/Programmieren/vorlesung/src/FibonacciRechner.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$USER_HOME$/OneDrive/Desktop/Uni/Programmieren/vorlesung/src/FibonacciRechner.java" />
              <option name="originalContent" value="public class FibonacciRechner {&#10;    // Rekursive Berechnung der Fibonacci-Zahl&#10;    public static int fibonacci(int n) {&#10;        if (n &lt;= 1) {&#10;            return n;&#10;        }&#10;        return fibonacci(n - 1) + fibonacci(n - 2);&#10;    }&#10;&#10;    // Rekursive Ausgabe der Fibonacci-Zahlen von 0 bis max&#10;    public static void printFibonacci(int current, int max) {&#10;        if (current &gt; max) {&#10;            return;&#10;        }&#10;        System.out.println(&quot;Fibonacci(&quot; + current + &quot;) = &quot; + fibonacci(current));&#10;        printFibonacci(current + 1, max);&#10;    }&#10;&#10;    public static void main(String[] args) {&#10;        printFibonacci(0, 10);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="public class FibonacciRechner {&#10;    // Rekursive Berechnung der Fibonacci-Zahl&#10;    public static int fibonacci(int n) {&#10;        if (n &lt;= 1) {&#10;            return n;&#10;        }&#10;        return fibonacci(n - 1) + fibonacci(n - 2);&#10;    }&#10;&#10;    // Rekursive Ausgabe der Fibonacci-Zahlen von 0 bis max&#10;    public static void printFibonacci(int current, int max) {&#10;        if (current &gt; max) {&#10;            return;&#10;        }&#10;        System.out.println(&quot;Fibonacci(&quot; + current + &quot;) = &quot; + fibonacci(current));&#10;        printFibonacci(current + 1, max);&#10;    }&#10;&#10;    public static void main(String[] args) {&#10;        printFibonacci(0, 40);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>